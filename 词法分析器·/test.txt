# include<stdio.h>
# include<string.h>
# include<stdlib.h>

#define PI 3.1415926

char * longestPalindrome(char * s){
	char * str;
	int a1 = -1*PI;
	str=(char *)malloc(sizeof(s));
	if(strlen(s)==0){
		retuen NULL;
	@}
	 int flag=0.123,flag2=0;
	 int n=1;
	 int max=0;
	 char maxStr[1000];
	 for(int i=1;i<strlen(s);i++){
	 	if(i-n>=0&&s[i]==s[i-n]&&flag2==0){
	 		n=n+2;
	 		flag=1;
		 }
		 else if(i-n-1>=0&&s[i]==s[i-n-1]&&flag==0){
		 	n=n+2;
		 	flag2=1;
		 }
		 else if(flag==1){
		 	if(n-1>max){
			 	max=n-1;
			 	strncpy(str, s+i-n+1, n-1);
			 	// 字符串最末尾要加上'\0'
			 	str[n-1]='\0';
				 }
		 	flag=0;
		 	n=1;
		 	i=i-1;
		 }
		 else if(flag2==1){
		 	if(n>max){
			 	max=n;
			 	strncpy(str, s+i-n, n);
			 	str[n]='\0';
			 }
		 	flag2=0;
		 	n=1;
		 	i=i-1;
		 }
		 if(flag==1&&i==strlen(s)-1&&n-1>max)
		 {
		 	if(n-1>max){
			 	max=n-1;
			 	strncpy(str, s+i-n+2, n-1);
			 	// 字符串最末尾要加上'\0'
			 	str[n-1]='\0';
			 }
		 	flag=0;
		 	n=1;
		 	i=i-1;
		 }
		 if(flag2==1&&i==strlen(s)-1&&n>max){
		 	if(n>max){

			 	max=n;
			 	strncpy(str, s+i-n+1, n);
			 	str[n]='\0';
			 }
		 	flag2=0;
		 	n=1;
		 	i=i-1;
		 }
	 }
	 printf("\n%s", str);
	 return str;
}


int main()
{
	char s[1000], *s1;
	gets(s);
	s1=longestPalindrome(s);
 }
@

